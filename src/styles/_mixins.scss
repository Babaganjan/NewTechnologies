@use "sass:math";
@use 'variables' as vars;

@function fluid($size-at-min-width, $size-at-max-width, $min-width: 360px, $max-width: 1920px) {
  $slope: math.div($size-at-max-width - $size-at-min-width, $max-width - $min-width);
  $y-axis-intersection: -1 * $min-width * $slope + $size-at-min-width;
  $return-value: clamp(#{$size-at-min-width}, #{$y-axis-intersection} + #{$slope} * 100vw, #{$size-at-max-width});
  @return $return-value;
}

@mixin typography($color: vars.$color-white, $weight: 500, $size: 1.125rem, $line: 1.2, $transform: uppercase) {
  font-weight: $weight;
  font-size: $size;
  line-height: $line;
  letter-spacing: -0.06em;
  text-transform: $transform;
  color: $color;
}

@mixin decoration(
  $color: vars.$color-white, $size: .75rem, $image: '@img/kvadrat.png', $pos: (right: -1px, top: -1px)

) {
  position: absolute;
  width: $size;
  height: $size;
  background-color: $color;
  mask-image: url(#{$image});
  mask-position: center;
  mask-size: contain;
  mask-repeat: no-repeat;
  pointer-events: none;
  @each $k, $v in $pos { #{$k}: $v; }
}

@mixin respond-min($breakpoint) {
  @media (min-width: $breakpoint) {
	@content;
  }
}
// bottom: -32px; border-bottom: 33px; width: 1026px; border-left/border-right: 63px;
@mixin trapezoid-decor($width: 21px, $height: 13px, $color: #000, $position: top, $size: 198px, $shift: -11px) {
  position: relative;

  &::before {
    content: ""; // Верхняя трапеция
    position: absolute;
    left: 50%;
    transform: translateX(-50%) rotate(180deg);
    width: $size;
    // height: 0;
    border-left: $width solid transparent;
    border-right: $width solid transparent;

    @if $position == top {
      top: $shift; // Положение сверху
      border-top: $height solid $color; // Верхняя граница
      border-bottom: none; // Убираем нижнюю границу
    }
  }

  &::after {
    content: ""; // Нижняя трапеция
    position: absolute;
    left: 50%;
    transform: translateX(-50%) rotate(180deg);
    width: $size;
    // height: 0;
    border-left: $width solid transparent;
    border-right: $width solid transparent;

    @if $position == bottom {
      bottom: $shift; // Позиционирование снизу
      border-top: none; // Убираем верхнюю границу
      border-bottom: $height solid $color; // Нижняя граница
    }
  }
}

@mixin bracket-decor($color: #FFF, $pos: (top: -2px, left:-10px)) {
  @include typography($color, 700, 0.875rem, 120%);
  padding-inline: fluid(10px, 22px);
  &::after {
	content: "[";
	position: absolute;
	@each $k, $v in $pos { #{$k}: $v; }
  }
}

@mixin line-decor(
  $positions: 38.7% 50% 61.3%,
  $color: #212121,
  $thickness: 1px,
  $angle: 90deg
) {
  position: relative;
  &::before {
	content: '';
	position: absolute;
	inset: 0;
	z-index: -1;
	pointer-events: none;
	background-repeat: no-repeat;
	
	$grads_str: '';
	@each $pos in $positions {
	  $half: calc($thickness / 2);
	  $g: linear-gradient(#{$angle}, transparent calc(#{$pos} - #{$half}), #{$color} calc(#{$pos} - #{$half}), #{$color} calc(#{$pos} + #{$half}), transparent calc(#{$pos} + #{$half}));
	  @if $grads_str == '' {
		$grads_str: $g;
	  } @else {
		$grads_str: #{$grads_str}, #{$g};
	  }
	}
	background-image: #{$grads_str};
  }
}

@mixin item-decor(
  $color: vars.$color-black,
  $before-position: (top: 3px, left: 3px),
  $after-position: (bottom: 3px, right: 3px),
  $size: (width: 12px, height: 12px),
  $after-size: (width: 12px, height: 12px),
) {
  position: relative;
  
    &::after {
      content: "";
      position: absolute;
      @each $k, $v in $after-position { #{$k}: $v; }
      @each $b, $c in $size { #{$b}: $c; }
      background-color: $color;
      mask-image: url(@img/decoration.svg);
      mask-position: center;
      mask-size: contain;
      mask-repeat: no-repeat;
      z-index: 3;
      transform: rotate(180deg);
  }
  
    &::before {
      content: "";
      position: absolute;
      @each $k, $v in $before-position { #{$k}: $v; }
	    @each $b, $c in $size { #{$b}: $c; }
      background-color: $color;
      mask-image: url(@img/decoration.svg);
      mask-position: center;
      mask-size: contain;
      mask-repeat: no-repeat;
      z-index: 3;
    }
}