@use 'variables' as vars;
@use "sass:map";
@mixin typography($color: vars.$color-white, $weight: 500, $size: 1.125rem, $line: 120%, $transform: uppercase) {
  font-weight: $weight;
  font-size: $size;
  line-height: $line;
  letter-spacing: -0.06em;
  text-transform: $transform;
  color: $color;
}

@mixin decoration(
  $image, $size: .75rem, $pos: (left: 0, top: 0), $color: null, $mode: svg
) {
  position: absolute;
  width: $size;
  height: $size;
  
  @each $k, $v in $pos { #{$k}: $v; }
  
  @if $color and $mode == svg {
	color: $color;
	background: url(#{$image}) no-repeat center/contain;
  } @else if $color and $mode == mask {
	background-color: $color;
	mask-image: url(#{$image});
	mask-repeat: no-repeat;
	mask-position: center;
	mask-size: contain;
  } @else {
	background: url(#{$image}) no-repeat center/contain;
  }
  
  pointer-events: none;
}

@mixin arrow-icon($color: white) {
  &::after {
	content: "";
	display: inline-block;
	width: 0.75rem;
	height: 0.938rem;
	background: url("@img/arrow-black.svg") no-repeat center/contain;
	margin-left: 0.5rem;
	filter: brightness(0) invert(if($color == white, 1, 0));
	cursor: pointer;
  }
}


@mixin respond-max($breakpoint) {
  @media (max-width: $breakpoint) {
	@content;
  }
}

@mixin trapezoid-decor($width: 21px, $height: 12px, $color: #000, $position: top) {
  position: relative;

  &::before {
    content: ""; // Верхняя трапеция
    position: absolute;
    left: 50%;
    transform: translateX(-50%) rotate(180deg);
    width: 198px;
    height: 0;
    border-left: $width solid transparent;
    border-right: $width solid transparent;

    @if $position == top {
      top: -12px; // Положение сверху
      border-top: $height solid $color; // Верхняя граница
      border-bottom: none; // Убираем нижнюю границу
    }
  }

  &::after {
    content: ""; // Нижняя трапеция
    position: absolute;
    left: 50%;
    transform: translateX(-50%) rotate(180deg);
    width: 198px;
    height: 0;
    border-left: $width solid transparent;
    border-right: $width solid transparent;

    @if $position == bottom {
      bottom: -12px; // Позиционирование снизу
      border-top: none; // Убираем верхнюю границу
      border-bottom: $height solid $color; // Нижняя граница
    }
  }
}

@mixin bracket-decor($color: #FFF, $pos:(top: -2px, left:-10px)) {
  &::after {
	content: "[";
	position: absolute;
	@each $k, $v in $pos { #{$k}: $v; }
  }
}

@mixin line-decor(
  $positions: 38.7% 50% 61.3%,
  $color: #212121,
  $thickness: 1px,
  $angle: 90deg
) {
  position: relative;
  &::before {
	content: '';
	position: absolute;
	inset: 0;
	z-index: -1;
	pointer-events: none;
	background-repeat: no-repeat;
	
	$grads_str: '';
	@each $pos in $positions {
	  $half: calc($thickness / 2);
	  $g: linear-gradient(#{$angle}, transparent calc(#{$pos} - #{$half}), #{$color} calc(#{$pos} - #{$half}), #{$color} calc(#{$pos} + #{$half}), transparent calc(#{$pos} + #{$half}));
	  @if $grads_str == '' {
		$grads_str: $g;
	  } @else {
		$grads_str: #{$grads_str}, #{$g};
	  }
	}
	background-image: #{$grads_str};
  }
}

@mixin item-decor(
  $bg-colorOne: vars.$color-white, 
  $bg-colorTwo: vars.$graphics-almost-black, 
  $urlOne: url(@img/kvadrat.svg), 
  $urlTwo: url(@img/decoration.svg),
  $has-before: true,
  $has-after: true,
  $before-position: (top: 3px, left: 3px),
  $after-position: (top: 0, right: 0),
  $before-size: (width: 0.75rem, height: 0.75rem),
  $after-size: (width: 1.5rem, height: 1.5rem),
  $transform: rotate(0deg)
) {
  position: relative;
  
  @if $has-after {
    // Правый верхний угол (на wrapper)
    &::after {
      content: "";
      position: absolute;
      top: map-get($after-position, top);
      right: map-get($after-position, right);
      bottom: map-get($after-position, bottom);
      left: map-get($after-position, left);
      width: map-get($after-size, width);
      height: map-get($after-size, height);
      background-color: $bg-colorOne;
      mask-image: $urlOne;
      mask-repeat: no-repeat;
      mask-size: contain;
      mask-position: center;
      z-index: 3;
      transform: $transform;
    }
  }
  
  @if $has-before {
    // Левый верхний угол (на wrapper)
    &::before {
      content: "";
      position: absolute;
      top: map-get($before-position, top);
      right: map-get($before-position, right);
      bottom: map-get($before-position, bottom);
      left: map-get($before-position, left);
      width: map-get($before-size, width);
      height: map-get($before-size, height);
      background-color: $bg-colorTwo;
      mask-image: $urlTwo;
      mask-repeat: no-repeat;
      mask-size: contain;
      mask-position: center;
      z-index: 3;
      transform: $transform;
    }
  }
}