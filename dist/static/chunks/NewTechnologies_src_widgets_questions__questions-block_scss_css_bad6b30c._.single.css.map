{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 1, "column": 0}, "map": {"version":3,"sources":["turbopack:///turbopack:///[project]/NewTechnologies/src/widgets/questions/C:/Users/babag/NewTechnologies/src/widgets/questions/_questions-block.scss","turbopack:///turbopack:///[project]/NewTechnologies/src/widgets/questions/C:/Users/babag/NewTechnologies/src/shared/styles/_mixins.scss"],"sourcesContent":["$img-path: '/img';\n@import \"../../shared/styles/functions\";\r\n@import \"../../shared/styles/mixins\";\r\n\r\n.questions {\r\n  &__container {\r\n\tmargin-block: 6.875rem 6.25rem; \r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr;\r\n\tpadding: 0.625rem;\r\n  }\r\n  \r\n  &__title {\r\n\tposition: relative;\r\n\tmargin-bottom: 0.625rem;\r\n\t@include bracket-decor(var(--text-deep-gray), (top: -2px, left: 0));\r\n  }\r\n  \r\n  .card-wrapper {\r\n\tdisplay: grid;\r\n\tgap: 0.5rem;\r\n  }\r\n  \r\n  \r\n  &__card {\r\n\tposition: relative;\r\n\tdisplay: flex; \r\n\tflex-direction: column;\r\n\tmin-height: 130px;\r\n\tpadding: 0.625rem;\r\n\t\r\n\tbackground-color: var(--bg-light-gray);\r\n\tcolor: var(--text-black);\r\n\t\r\n\ttransition:\r\n\t\t\tbackground-color .2s ease,\r\n\t\t\tcolor .2s ease;\r\n\t\r\n\t&::before {\r\n\t  content: '';\r\n\t  position: absolute;\r\n\t  bottom: 0;\r\n\t  right: 0;\r\n\t  margin: 10px;\r\n\t  width: 1.563rem;\r\n\t  height: 1.563rem;\r\n\t  background-color: currentColor;\r\n\t  mask: url('/img/arrow-black.svg') center / contain no-repeat;\r\n\t  transition: transform .22s ease;\r\n\t}\r\n\t\r\n\t// Hover states\r\n\t&:hover {\r\n\t  background-color: var(--bg-black);\r\n\t  color: white;\r\n\t  \r\n\t  .questions__card-decorative {\r\n\t\topacity: 1;\r\n\t\tvisibility: visible;\r\n\t  }\r\n\t  \r\n\t  .questions__content::after {\r\n\t\tbackground-color: white;\r\n\t  }\r\n\t}\r\n\t\r\n\t&:not(&--active):hover::before {\r\n\t  transform: rotate(180deg);\r\n\t}\r\n  }\r\n  \r\n  &__content {\r\n\tposition: relative;\r\n\t@include typography(var(--text-black), 500, fluid(18px, 28px), 1.15);\r\n\tcolor: inherit;\r\n\ttransition: color .2s ease;\r\n\t\r\n\t&::after {\r\n\t  content: '';\r\n\t  position: absolute;\r\n\t  top: -6px;\r\n\t  left: -7px;\r\n\t  width: fluid(12px, 20px);\r\n\t  height: fluid(12px, 20px);\r\n\t  background-color: #565656;\r\n\t  mask: url('/img/decoration.svg') center / contain no-repeat;\r\n\t}\r\n  }\r\n  \r\n  &__card-decorative {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tright: -1px;\r\n\twidth: fluid(24px, 40px);\r\n\theight: fluid(24px, 40px);\r\n\tbackground-color: var(--text-white);\r\n\tmask: url('/img/kvadrat.png') center / contain no-repeat;\r\n\topacity: 0;\r\n\tvisibility: hidden;\r\n\tpointer-events: none;\r\n\ttransition:\r\n\t\t\topacity .22s ease,\r\n\t\t\tvisibility .22s ease;\r\n  }\r\n  \r\n  &__card--active {\r\n\tjustify-content: center;\r\n\tgap: 0.375rem;\r\n\tpadding: 0.625rem;\r\n\t\r\n\tbackground-color: var(--bg-white);\r\n\tborder: 1px solid var(--text-gray);\r\n\tborder-radius: 2px 0 2px 0;\r\n\ttext-align: left;\r\n\tcursor: pointer;\r\n\t\r\n\t&::before {\r\n\t  top: -1px;\r\n\t  left: -1px;\r\n\t  bottom: auto;\r\n\t  right: auto;\r\n\t  margin: 0;\r\n\t  width: fluid(36px, 60px);\r\n\t  height: fluid(36px, 60px);\r\n\t  mask-image: url('/img/decoration-card.svg');\r\n\t  transform: rotate(180deg);\r\n\t}\r\n\t\r\n\t&::after {\r\n\t  content: \"\";\r\n\t  position: absolute;\r\n\t  bottom: -1px;\r\n\t  right: -1px;\r\n\t  width: fluid(36px, 60px);\r\n\t  height: fluid(36px, 60px);\r\n\t  background-color: currentColor;\r\n\t  mask: url('/img/decoration-card.svg') center / contain no-repeat;\r\n\t}\r\n\t\r\n\t&:hover .questions__card-arrow--active {\r\n\t  background-color: white;\r\n\t  transform: rotate(180deg);\r\n\t}\r\n  }\r\n  \r\n  &__card-title {\r\n\t.questions__card--active & {\r\n\t  @include typography(var(--text-black), 500, fluid(18px, 42px), 1);\r\n\t  color: inherit;\r\n\t}\r\n  }\r\n  \r\n  &__card-subtitle {\r\n\t.questions__card--active & {\r\n\t  font-family: var(--second-family);\r\n\t  @include typography(var(--text-black), 500, fluid(14px, 22px), 1.10, none);\r\n\t}\r\n  }\r\n  \r\n  &__card-arrow--active {\r\n\tposition: absolute;\r\n\tbottom: 0;\r\n\tright: 0;\r\n\tmargin: 0.625rem;\r\n\twidth: 1.563rem;\r\n\theight: 1.563rem;\r\n\tbackground-color: currentColor;\r\n\tmask: url('/img/arrow-black.svg') center / contain no-repeat;\r\n\ttransition: transform .22s ease;\r\n  }\r\n  \r\n  @include respond-min(1024px) {\r\n\t&__card {\r\n\t  $card-size: fluid(240px, 400px);\r\n\t  min-height: $card-size;\r\n\t  max-width: $card-size;\r\n\t}\r\n\t\r\n\t&__card-decorative {\r\n\t  top: auto;\r\n\t  right: auto;\r\n\t  bottom: 0;\r\n\t  left: 0;\r\n\t  transform: rotate(180deg);\r\n\t}\r\n\t\r\n\t.card-wrapper {\r\n\t  grid-template-columns: repeat(5, minmax(240px, 400px));\r\n\t  grid-template-areas:\r\n        'a . b c .'\r\n        'd e f g .'\r\n        '. h . q .';\r\n\t}\r\n\t\r\n\t@each $letter in (a, b, c, d, e, f, g, h) {\r\n\t  .card--#{$letter} { grid-area: $letter; }\r\n\t}\r\n\t&__card--active { grid-area: q; }\r\n  }\r\n  \r\n  @include respond-min(1250px) {\r\n\t.card-wrapper {\r\n\t  grid-template-areas:\r\n        'a . b c .'\r\n        'd e f . g'\r\n        '. h . q .';\r\n\t}\r\n  }\r\n}","@use \"sass:math\";\r\n@use \"sass:list\";\r\n\r\n@mixin typography($color: var(--text-white), $weight: 500, $size: 1.125rem, $line: 120%, $transform: uppercase) {\r\n  font-weight: $weight;\r\n  font-size: $size;\r\n  line-height: $line;\r\n  letter-spacing: -0.06em;\r\n  text-transform: $transform;\r\n  color: $color;\r\n}\r\n\r\n@mixin decoration(\r\n  $color: var(--text-white), $size: .75rem, $image: '/img/kvadrat.png', $pos: (right: -1px, top: -1px)\r\n\r\n) {\r\n  position: absolute;\r\n  width: $size;\r\n  height: $size;\r\n  background-color: $color;\r\n  mask-image: url(#{$image});\r\n  mask-position: center;\r\n  mask-size: contain;\r\n  mask-repeat: no-repeat;\r\n  pointer-events: none;\r\n  @each $k, $v in $pos { #{$k}: $v; }\r\n}\r\n\r\n@mixin respond-min($breakpoint, $type: min) {\r\n  @if $type == min {\r\n\t@media (min-width: $breakpoint) { @content; }\r\n  } @else if $type == max {\r\n\t@media (max-width: ($breakpoint - 1px)) { @content; }\r\n  } @else if $type == between {\r\n\t@media (min-width: nth($breakpoint, 1)) and (max-width: nth($breakpoint, 2)) {\r\n\t  @content;\r\n\t}\r\n  }\r\n}\r\n// bottom: -32px; border-bottom: 33px; width: 1026px; border-left/border-right: 63px;\r\n@mixin trapezoid-decor(\r\n  $width: 21px,\r\n  $height: 13px,\r\n  $color: #000,\r\n  $position: both,\r\n  $size: 198px,\r\n  $shift: -11px\r\n) {\r\n  position: relative;\r\n  \r\n  @if $position == top or $position == both {\r\n\t&::before {\r\n\t  content: \"\";\r\n\t  position: absolute;\r\n\t  left: 50%;\r\n\t  transform: translateX(-50%) rotate(180deg);\r\n\t  width: $size;\r\n\t  border-left: $width solid transparent;\r\n\t  border-right: $width solid transparent;\r\n\t  top: $shift;\r\n\t  border-top: $height solid $color;\r\n\t}\r\n  }\r\n  \r\n  @if $position == bottom or $position == both {\r\n\t&::after {\r\n\t  content: \"\";\r\n\t  position: absolute;\r\n\t  left: 50%;\r\n\t  transform: translateX(-50%) rotate(180deg);\r\n\t  width: $size;\r\n\t  border-left: $width solid transparent;\r\n\t  border-right: $width solid transparent;\r\n\t  bottom: $shift;\r\n\t  border-bottom: $height solid $color;\r\n\t}\r\n  }\r\n}\r\n\r\n@mixin bracket-decor($color: #FFF, $pos: (top: -2px, left:-10px)) {\r\n  @include typography($color, 700, fluid(14px, 22px), 120%);\r\n  padding-inline: fluid(10px, 22px);\r\n  &::after {\r\n\tcontent: \"[\";\r\n\tposition: absolute;\r\n\t@each $k, $v in $pos { #{$k}: $v; }\r\n  }\r\n}\r\n\r\n@mixin line-decor(\r\n  $positions: 38.7% 50% 61.3%,\r\n  $color: #212121,\r\n  $thickness: 1px,\r\n  $angle: 90deg\r\n) {\r\n  position: relative;\r\n  &::before {\r\n\tcontent: '';\r\n\tposition: absolute;\r\n\tinset: 0;\r\n\tz-index: -1;\r\n\tpointer-events: none;\r\n\tbackground-repeat: no-repeat;\r\n\t\r\n\t$gradients: ();\r\n\t@each $pos in $positions {\r\n\t  $half: calc($thickness / 2);\r\n\t  $gradient: linear-gradient(\r\n\t\t\t\t\t  $angle,\r\n\t\t\t\t\t  transparent calc(#{$pos} - #{$half}),\r\n\t\t\t\t\t  $color calc(#{$pos} - #{$half}),\r\n\t\t\t\t\t  $color calc(#{$pos} + #{$half}),\r\n\t\t\t\t\t  transparent calc(#{$pos} + #{$half})\r\n\t  );\r\n\t  $gradients: list.append($gradients, $gradient, comma);\r\n\t}\r\n\tbackground-image: $gradients;\r\n  }\r\n}\r\n\r\n@mixin item-decor(\r\n  $color: var(--text-black),\r\n  $before-position: (top: 3px, left: 3px),\r\n  $after-position: (bottom: 3px, right: 3px),\r\n  $size: (width: 12px, height: 12px),\r\n) {\r\n  position: relative;\r\n  \r\n  &::before,\r\n  &::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\t@each $b, $c in $size { #{$b}: $c; }\r\n\tbackground-color: $color;\r\n\tmask-image: url(/img/decoration.svg);\r\n\tmask-position: center;\r\n\tmask-size: contain;\r\n\tmask-repeat: no-repeat;\r\n\tz-index: 3;\r\n  }\r\n  \r\n  &::before {\r\n\t@each $k, $v in $before-position { #{$k}: $v; }\r\n  }\r\n  \r\n  &::after {\r\n\t@each $k, $v in $after-position { #{$k}: $v; }\r\n\ttransform: rotate(180deg);\r\n  }\r\n}"],"names":[],"mappings":"AAKE;;;;;;;;AAOA;;;;;;;;;;;;;AAsEA;;;;;;;AAhEA;;;;;AAMA;;;;;;;;;;;AAcD;;;;;;;;;;;;;;AAkBE;;;;;AAKA;;;;;AAKF;;;;AACE;;;;AA9DD;;;;;;;;;;;AA6EC;;;;;;;;;;;;AAYF;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;AAQE;;;;;;;;;;;;;AAeF;;;;;;;;;;;;AAcA;;;;;AApJC;;;;;;;;;AAiKD;;;;;;;;;;AASE;;;;;;;;;;;;;AAoBA;EAAA;;;;;EAAA;;;;;;;;EArKF;;;;;;;EAzBC;;;;EAAA;;;;EAAA;;;;EAAA;;;;EAAA;;;;EAAA;;;;EAAA;;;;EAAA;;;;EAAA;;;;;AAAA;EAAA"}}]
}